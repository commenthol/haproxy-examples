# loadbalancer configuration
# for "haproxy"
# documentation see:
# http://code.google.com/p/haproxy-docs/
#
# THIS IS THE CONFIG FOR LOCAL TESTS

global
	maxconn 1000
	#log 127.0.0.1:514 local0 debug
	log /dev/log local0 info

userlist stats-auth
	group admin    users admin
	user  admin    insecure-password admin
	group readonly users haproxy
	user  haproxy  insecure-password haproxy

defaults
	log global
	mode http
	timeout connect 5s
	timeout client  15s
	timeout server  15s
	stats enable

####
# Internal connection
#                              +-->[backend_3000]
# -->--[ft_www]--+--[servers]--+-->[backend_3001]
#                              +-->[backend_3002] (backup)
#                              +-->[backend_3003] (backup disabled)
# -->--[stats]
####
frontend ft_www
	bind *:80
	option httplog
	option forwardfor
	acl url_static path_beg /static /images /img /css
	acl url_static path_end .gif .png .jpg .css .js
	use_backend static if url_static
	default_backend www

backend www
	mode http
	balance roundrobin
	# http check is at `/ping` and checks for `pong` in response
	option httpchk GET /ping HTTP/1.1\r\nUser-Agent:\ haproxy\r\nHost:\ www
	http-check expect rstring pong
	# our servers
	server srv_3000 "${LOCAL_IP}:3000" check maxconn 100
	server srv_3001 "${LOCAL_IP}:3001" check maxconn 100
	server srv_3002 "${LOCAL_IP}:3002" check maxconn 100 backup
	server srv_3003 "${LOCAL_IP}:3003" check maxconn 100 backup disabled

backend static
	mode http
	balance roundrobin
	# http check is at `/ping` and checks for `pong` in response
	option httpchk GET /ping HTTP/1.1\r\nUser-Agent:\ haproxy\r\nHost:\ static
	http-check expect rstring pong
	# add a header so that we see we are on `static`
	http-request set-header X-static "1"
	# our servers
	server srv_3000 "${LOCAL_IP}:3000" check
	server srv_3001 "${LOCAL_IP}:3001" check
	server srv_3002 "${LOCAL_IP}:3002" check backup
	server srv_3003 "${LOCAL_IP}:3003" check backup disabled

listen stats
	bind *:8888
	mode http
	acl AUTH       http_auth(stats-auth)
	acl AUTH_ADMIN http_auth_group(stats-auth) admin
	acl NET_ADMIN  src "${LOCAL_IP}/24"
	stats http-request deny unless NET_ADMIN
	stats http-request auth unless AUTH
	stats admin if AUTH_ADMIN
	stats uri /
	stats refresh 5s
