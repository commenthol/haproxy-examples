## ssl termination
# @see https://www.haproxy.com/blog/use-a-load-balancer-as-a-first-row-of-defense-against-ddos/

global
    log /dev/log local0
    tune.ssl.default-dh-param 2048

defaults
    mode http
    stats enable
    timeout connect 5s
    timeout server 10s
    timeout client 30s

frontend ft_ssl_zone1
    mode http
    bind *:80
    bind *:443 ssl crt /etc/haproxy/certs/star_chained.crt
    http-request set-header X-SSL %[ssl_fc]
    option redispatch
    option forwardfor
    # redirect if not https
    redirect scheme https code 301 if !{ ssl_fc }
    default_backend www

backend www
    mode http
    balance roundrobin

    # alive check using /ping which needs to respond with "pong"
    option httpchk GET /ping HTTP/1.1\r\nUser-Agent:\ haproxy1\r\nHost:\ www
    http-check expect rstring pong

    server svr3000 "${LOCAL_IP}:3000" check
    # server svr3001 "${LOCAL_IP}:3001" check backup
    server zone2 "${ZONE2_IP}:443" check backup ssl ca-file /etc/haproxy/certs/root_ca.crt

frontend statistics
    bind *:8888
    mode http
    # take additional security measurements!
    #stats auth admin:admin
    stats admin if TRUE
    stats uri /
    stats refresh 5s
