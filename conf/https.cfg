## ssl termination
# @see https://www.haproxy.com/blog/use-a-load-balancer-as-a-first-row-of-defense-against-ddos/

global
    log /dev/log local0 info
    stats socket /var/run/haproxy.stats level admin
    # set default parameters to the modern configuration
    # @see https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
    log global
    mode http
    stats enable
    option http-server-close
    # prevent Slowloris like attacks
    timeout http-request 5s
    timeout connect 5s
    timeout server 10s
    timeout client 30s

frontend ft_ssl
    bind *:80
    bind *:443 ssl crt /etc/haproxy/certs/star_chained.crt
    option httplog
  	option forwardfor

    # Use General Purpose Couter (gpc) 0 in SC1 as a global abuse counter
    # Monitors the number of request sent by an IP over a period of 10 seconds
    stick-table type ip size 1m expire 10s store gpc0,http_req_rate(10s)
    tcp-request connection track-sc1 src
    # refuses a new connection from an abuser
    #tcp-request content reject if { src_get_gpc0 gt 0 }
    tcp-request connection reject if { src_get_gpc0 gt 0 }
    # returns a 429 for requests in an established connection
    http-request deny deny_status 429 if { src_get_gpc0 gt 0 }

    # set headers
    unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
    unique-id-header X-req-id
    http-request set-header X-SSL %[ssl_fc]

    # redirect if not https
    redirect scheme https code 301 if !{ ssl_fc }
    # HSTS (15768000 seconds = 6 months)
    http-response set-header Strict-Transport-Security max-age=15768000

    use_backend static if { path_end .jpg .png .gif .css .js }
    default_backend www

backend www
    balance roundrobin

    # alive check using /ping which needs to respond with "pong"
    option httpchk GET /ping HTTP/1.1\r\nUser-Agent:\ haproxy\r\nHost:\ www
    http-check expect rstring pong

    # If the source IP sent 10 or more http request over the defined period,
    # flag the IP as abuser on the frontend
    acl abuse src_http_req_rate(ft_ssl) ge 10
    acl flag_abuser src_inc_gpc0(ft_ssl) gt 0
    tcp-request content reject if abuse flag_abuser

    cookie MYSRV insert indirect nocache
    server svr_3000 "${LOCAL_IP}:3000" check cookie svr3000 maxconn 100

backend static
    balance roundrobin
    # alive check using /ping which needs to respond with "pong"
    option httpchk GET /ping HTTP/1.1\r\nUser-Agent:\ haproxy\r\nHost:\ www
    http-check expect rstring pong
    # the server list ...
    server svr_3000 "${LOCAL_IP}:3000" check maxconn 1000

frontend stats
    bind *:8888
    mode http
    # take additional security measurements - check `http.cfg`
    stats auth admin:admin
    stats admin if TRUE
    stats uri /
    stats refresh 5s
